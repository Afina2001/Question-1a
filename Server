#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <time.h>

void error(const char *msg){
        perror(msg);
        exit(1);
}

int main(int argc, char *argv[]) {
        int LSocketFD, establishedConnectFD, portNumber, charRead;
        socklen_t sizeOfClientInfo;
        struct sockaddr_in serverAddress, clientAddress;
        int randomNum;

        if (argc < 2)
        {
                fprintf(stderr,"USAGE: %s port\n", argv[0]);
                exit(1);
        }

        memset((char *)&serverAddress, '\0', sizeof(serverAddress));
        portNumber = atoi(argv[1]);
        serverAddress.sin_family = AF_INET;
        serverAddress.sin_port = htons(portNumber);
        serverAddress.sin_addr.s_addr = INADDR_ANY;

        LSocketFD = socket(AF_INET, SOCK_STREAM, 0);
        if (LSocketFD < 0)
                error("ERROR opening socket");

        if (bind(LSocketFD, (struct sockaddr *)&serverAddress, sizeof(serverAddress)) < 0)
                error("ERROR on binding");

        listen(LSocketFD, 5);

        sizeOfClientInfo = sizeof(clientAddress);
        establishedConnectFD = accept(LSocketFD, (struct sockaddr *)&clientAddress, &sizeOfClientInfo);
          if (establishedConnectFD < 0)
                error("ERROR on accept");

        srand(time(NULL));
        randomNum = rand() % 900 + 100;

        charRead = send(establishedConnectFD, &randomNum, sizeof(int), 0);
        if (charRead < 0)
                error("ERROR writing to socket");

        close(establishedConnectFD);
        close(LSocketFD);
        return 0;
}
